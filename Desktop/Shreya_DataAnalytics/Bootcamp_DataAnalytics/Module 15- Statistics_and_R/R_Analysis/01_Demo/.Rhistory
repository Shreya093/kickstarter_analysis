library(tidyverse)
?mutate()
setwd("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo")
load("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/.RData")
View(demo_table)
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
View(demo_table2)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep')
View(summarize_demo)
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer),Maximum_Price=max(price),Num_Vehicles=n(), .groups = 'keep')
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
?gather
demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
View(demo_table3)
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
long_table <- demo_table3 %>% gather(key="Metric",value="Score",buying_price:popularity)
View(long_table)
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
?gather()
View(filter_table2)
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
?spread()
wide_table <- long_table %>% spread(key="Metric",value="Score")
View(wide_table)
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
all.equal(demo_table3,wide_table)
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
?ggplot()
plt <- ggplot(mpg,aes(x=class))
View(plt)
View(plt)
# Plot a bar plot
plt + geom_bar()
View(plt)
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
# compare the number of vehicles from each manufacturer in the dataset
# Create summary table
mpg_summary = mpg %% group_by(manufacturer) %% summarize(Vehicle_Count = n(), .groups = 'keep')
# compare the number of vehicles from each manufacturer in the dataset
# Create summary table
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep')
View(mpg_summary)
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
#import dataset into ggplot2
plt <- ggplot(mpg,aes(x=manufacturer,y=Vehicle_Count))
plt + geom_col() # Plot bar plot
#import dataset into ggplot2
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=Vehicle_Count)) #import dataset into ggplot2
plt + geom_col() #plot a bar plot
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset")
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") +
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") +
theme(axis.text.x=element_text(angle=45,hjust=1))
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") + #plot a boxplot with labels
>theme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x-axis label 45 degrees
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") + #plot a boxplot with labels
theme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x-axis label 45 degrees
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
mpg_summary <- subset(mpg,manufacturer=="toyota") %% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
#import dataset into ggplot2
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy))
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
# Generate line plot
plt + geom_line()
# Generate line plot
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(15:30))
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
plt <- ggplot(mpg,aes(x=displ,y=cty))
#add scatter plot with labels
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency (MPG)")
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
#Apply custom aesthetics to above scatter plot
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class))
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency (MPG)" , color="Vehicle Class")
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class")
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
View(long_table)
View(demo_table3)
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class,shape=drv))
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class",shape="Type of Drive")
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class,shape=drv,size=3))
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class",shape="Type of Drive")
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class,shape=drv,size=2))
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class",shape="Type of Drive")
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
#generate a boxplot to visualize the highway fuel efficiency of our mpg datase
plt <- ggplot(mpg,aes=(y=hwy))
plt + geom_boxplot()
#generate a boxplot to visualize the highway fuel efficiency of our mpg datase
plt <- ggplot(mpg,aes(y=hwy))
plt + geom_boxplot()
#create a set of boxplots that compares highway fuel efficiency for each car manufacturer
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
#create a set of boxplots that compares highway fuel efficiency for each car manufacturer
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy,color=class))
#add boxplot and rotate x-axis labels 45 degrees
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) + labs(x="Manufacturer", y="Highway Fuel Efficiency" ,
color="Vehicle Class")
#create a set of boxplots that compares highway fuel efficiency for each car manufacturer
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy,color=class,shape=drv))
#add boxplot and rotate x-axis labels 45 degrees
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) + labs(x="Manufacturer", y="Highway Fuel Efficiency" ,
color="Vehicle Class"shape="Type of Drive")
#add boxplot and rotate x-axis labels 45 degrees
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) + labs(x="Manufacturer", y="Highway Fuel Efficiency" ,
color="Vehicle Class",shape="Type of Drive")
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
#add boxplot and rotate x-axis labels 45 degrees
plt + geom_boxplot(outlier.colour = "red", outlier.shape = 1) + theme(axis.text.x=element_text(angle=45,hjust=1)) + labs(x="Manufacturer", y="Highway Fuel Efficiency" ,
color="Vehicle Class",shape="Type of Drive")
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
#visualize the average highway fuel efficiency across the type of vehicle class from 1999 to 2008
mpg_summary = mpg %% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #Create summary table
#visualize the average highway fuel efficiency across the type of vehicle class from 1999 to 2008
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')#Create summary table
plt <- ggplot(mpg_summary, aes(x=class,y=factor(year),fill=Mean_Hwy))
#create heatmap with labels
plt + geom_tile() + labs(x="Vehicle Class",y="Vehicle Year",fill="Mean Highway (MPG)")
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy)) #import dataset into ggplot2
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
#visualize the average highway fuel efficiency across the type of vehicle class from 1999 to 2008
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')#Create summary table
plt <- ggplot(mpg_summary, aes(x=class,y=factor(year),fill=Mean_Hwy))
#create heatmap with labels
plt + geom_tile() + labs(x="Vehicle Class",y="Vehicle Year",fill="Mean Highway (MPG)")
#visualize the average highway fuel efficiency across the type of vehicle class from 1999 to 2008
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')#Create summary table
plt <- ggplot(mpg_summary, aes(x=class,y=factor(year),fill=Mean_Hwy))
#create heatmap with labels
plt + geom_tile() + labs(x="Vehicle Class",y="Vehicle Year",fill="Mean Highway (MPG)")
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy)) #import dataset into ggplot2
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy)) #import dataset into ggplot2
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
#generate a boxplot to visualize the highway fuel efficiency of our mpg dataset
plt <- ggplot(mpg,aes(y=hwy))
plt + geom_boxplot()
#create a set of boxplots that compares highway fuel efficiency for each car manufacturer
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy,color=class,shape=drv))
#add boxplot and rotate x-axis labels 45 degrees
plt + geom_boxplot(outlier.colour = "red", outlier.shape = 1) + theme(axis.text.x=element_text(angle=45,hjust=1)) + labs(x="Manufacturer", y="Highway Fuel Efficiency" ,
color="Vehicle Class",shape="Type of Drive")
#our previous boxplot example comparing the highway fuel efficiency across manufacturers, add our data points using the geom_point() function
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) + geom_point() #overlay scatter plot on top
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") #add scatter plot
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
#we can layer the upper and lower standard deviation boundaries to our visualization using the geom_errorbar() function
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ),SD_Engine=sd(displ), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") + #add scatter plot with labels
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine)) #overlay with error bars
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") + #add scatter plot with labels
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine)) #overlay with error bars
#convert the mpg dataset into long format
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy)) #convert to long format
head(mpg_long)
View(mpg_long)
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
# visualize the different vehicle fuel efficiency ratings by manufacturer
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot with labels rotated 45 degrees
?facet_wrap()
#facet our previous example by the fuel-efficiency type
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + facet_wrap(vars(MPG_Type)) + #create multiple boxplots, one for each MPG type
theme(axis.text.x=element_text(angle=45,hjust=1),legend.position = "none") + xlab("Manufacturer") #rotate x-axis labels
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
# test the distribution of vehicle weights from the built-in mtcars dataset
ggplot(mtcars,aes(x=wt)) + geom_density() #visualize distribution using density plot
#Perform shapiro test on above
shapiro.test(mtcars$wt)
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
plt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
View(population_table)
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
#create a sample dataset using dplyr's sample_n()function
sample_table <- population_table %>% sample_n(50) #randomly sample 50 data points
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven)))
#create a sample dataset using dplyr's sample_n()function
sample_table <- population_table %>% sample_n(50) #randomly sample 50 data points
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven)))
#Two sample t-test
#we produce our two samples
sample_table <- population_table %>% sample_n(50) #generate 50 randomly sampled data points
sample_table2 <- population_table %>% sample_n(50) #generate another 50 randomly sampled data points
t.test(log10(sample_table$Miles_Driven),log10(sample_table2$Miles_Driven)) #compare means of two samples
?t.tst()
?t.test
mpg_data <- read.csv('mpg_modified.csv') #import dataset
mpg_1999 <- mpg_data %>% filter(year==1999) #select only data points where the year is 1999
mpg_2008 <- mpg_data %>% filter(year==2008) #select only data points where the year is 2008
t.test(mpg_1999$hwy,mpg_2008$hwy,paired = T) #compare the mean difference between two samples
?aov
# ANOVA test
#"Is there any statistical difference in the horsepower of a vehicle based on its engine type?"
mtcars_filt <- mtcars[,c("hp","cyl")] #filter columns from mtcars dataset
mtcars_filt$cyl <- factor(mtcars_filt$cyl) #convert numeric column to factor
aov(hp ~ cyl,data=mtcars_filt) #compare means across multiple levels
# To retrieve our p-values, we have to wrap our aov()function in a summary() function
summary(aov(hp ~ cyl,data=mtcars_filt))
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
# To retrieve our p-values, we have to wrap our aov()function in a summary() function
summary(aov(hp ~ cyl,data=mtcars_filt))
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
head(mtcars)
#Mod-15.7.1 Correlations
#we'll test whether or not horsepower (hp) is correlated with quarter-mile race time (qsec).
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() #create scatter plot
plt + geom_line()#create scatter plot
plt + geom_point()#create scatter plot
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
#cor() function to quantify the strength of the correlation between our two variables
cor(mtcars$hp,mtcars$qsec) #calculate correlation coefficient
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
used_cars <- read.csv('used_car_data.csv',stringsAsFactors = F) #read in dataset
head(used_cars)
# we'll test whether or not vehicle miles driven and selling price are correlated
plt <- ggplot(used_cars,aes(x=Miles_Driven,y=Selling_Price)) #import dataset into ggplot2
plt + geom_point() #create a scatter plot
cor(used_cars$Miles_Driven,used_cars$Selling_Price) #calculate correlation coefficient
used_matrix <- as.matrix(used_cars[,c("Selling_Price","Present_Price","Miles_Driven")]) #convert data frame into numeric matrix
cor(used_matrix)
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
# Linear regression
#using the mtcars dataset. Using our simple linear regression model, we'll test whether or not quarter-mile race time (qsec) can be predicted using a linear model and horsepower (hp).
lm(qsec ~ hp,mtcars) #create linear model
#To determine our p-value and our r-squared value for a simple linear regression model, we'll use the summary()
summary(lm(qsec~hp,mtcars)) #summarize linear model
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
model <- lm(qsec ~ hp,mtcars) #create linear model
yvals <- model$coefficients['hp']*mtcars$hp +
model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
# MULTIPLE Linear regression
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars) #generate multiple linear regression model
summary(lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars)) #generate summary statistics
# Chi-squared test
#if we want to test whether there is a statistical difference in the distributions of vehicle class across 1999 and 2008 from our mpg dataset,
table(mpg$class,mpg$year) #generate contingency table
#pass the contingency table to the chisq.test()function
tbl <- table(mpg$class,mpg$year) #generate contingency table
chisq.test(tbl) #compare categorical distributions
source("~/Desktop/Shreya_DataAnalytics/Bootcamp_DataAnalytics/Module 15- Statistics_and_R/R_Analysis/01_Demo/Practise.R")
